f = list.files(dir,pattern="\\.docx")
read_docx(paste(dir,f[1],sep="\\/"))
paste(dir,f[1],sep="\\/")
f
f = list.files(dir,pattern="\\&")
f = list.files(dir,pattern="\\$")
f
f = list.files(dir,pattern="^\\$")
f
f = list.files(dir,pattern="[^\\$]")
f
list.files(dir,pattern="[^\\$]")
dir = "/Users/mohriner/Dropbox/Research/In Review/RapWork/Ohriner_flow_initial_manuscript/BookComponents"
f = list.files(dir,pattern="[^\\$]")
f
f = f[17:length(f)]
read_docx(paste(dir,f[1],sep="\\/"))
f
paste(dir,f[1],sep="\\/")
read_docx(paste(dir,f[1],sep="\/"))
read_docx(paste(dir,f[1],sep="/"))
setwd(dir)
f %>% llply(.,read_docx)
f %>% llply(.,read_docx) -> book
length(book)
i = book[[1]]
i
i %>% strsplit(.," ")
i %>% strsplit(.," ") %>% unlist
j="Will"
strsplit(.,"")
strsplit(j,"")
strsplit(j,"") %>% unlist
strsplit(j,"") %>% unlist %>% is_in(.,LETTERS)
i %>% strsplit(.," ") %>% unlist %>%
llply(.,function(j){
strsplit(j,"") %>% unlist %>% is_in(.,LETTERS) %>% all
})
i %>% strsplit(.," ") %>% unlist %>%
laply(.,function(j){
strsplit(j,"") %>% unlist %>% is_in(.,LETTERS) %>% all
})
i %>% strsplit(.," ") %>% unlist %>%
laply(.,function(j){
strsplit(j,"") %>% unlist %>% is_in(.,LETTERS) %>% all
}) %>% which -> acro
i %>% strsplit(.," ") %>% unlist %>% .[acro]
i %>% strsplit(.," ") %>% unlist %>% gsub("[[:punct:]]","",.) %>%
laply(.,function(j){
strsplit(j,"") %>% unlist %>% is_in(.,LETTERS) %>% all
}) %>% which -> acro
i %>% strsplit(.," ") %>% unlist %>% .[acro]
llply(book,function(i){
i %>% strsplit(.," ") %>% unlist %>% gsub("[[:punct:]]","",.) %>%
laply(.,function(j){
strsplit(j,"") %>% unlist %>% is_in(.,LETTERS) %>% all
}) %>% which -> acro
i %>% strsplit(.," ") %>% unlist %>% .[acro] %>% return
})
llply(book,function(i){
i %>% strsplit(.," ") %>% unlist %>% gsub("[[:punct:]]","",.) %>%
laply(.,function(j){
strsplit(j,"") %>% unlist %>% is_in(.,LETTERS) %>% all
}) %>% which -> acro
i %>% strsplit(.," ") %>% unlist %>% .[acro] %>% return
},.progress="text")
llply(book,function(i){
i %>% strsplit(.," ") %>% unlist %>% gsub("[[:punct:]]","",.) %>%
laply(.,function(j){
strsplit(j,"") %>% unlist %>% is_in(.,LETTERS) %>% all
}) %>% which -> acro
i %>% strsplit(.," ") %>% unlist %>% .[acro] %>% return
},.progress="text") -> acros
acros
acros
names(acros) = f
f
acros
acros
laply(book,function(i){
grepl(target,.)
})
grepl(target,)
grepl(target,i)
target = "COCA"
laply(book,function(i){
grepl(target,i)
})
i
laply(i,function(j){
grepl(target,j)
}
})
laply(i,function(j){
grepl(target,j)
}
})
laply(i,function(j){
grepl(target,j)
})
llply(book,function(i){
laply(i,function(j){
grepl(target,j)
}) %>% which
})
laply(i,function(j){
grepl(target,j)
}) %>% which
llply(book,function(i){
laply(i,function(j){
grepl(target,j)
}) %>% which
}) -> res
names(res) = f
res
f[[4]][21]
book[[4]][21]
acros
acros %>% unlist %>% unique()
acros %>% unlist %>% unique() %>% sort()
acros %>% unlist %>% unique() %>% sort()
acros %>% unlist %>% gsub("[[:punct:]]","",.)
acros %>% unlist %>% unname %>% gsub("[[:punct:]]","",.)
acros %>% unlist %>% unname %>% gsub("[[:punct:]]","",.) %>% unique %>% sort
acros %>% unlist %>% unname %>% gsub("[[:punct:]]","",.) %>% unique %>% sort
acros
length(acros)
acros[1:20] %>% unlist %>% unname %>% gsub("[[:punct:]]","",.) %>% unique %>% sort
acros[1:20] %>% unlist %>% unname %>% gsub("[[:punct:]]","",.) %>% unique %>% sort
names(acros)
acros[-c(13,20)] %>% unlist %>% unname %>% gsub("[[:punct:]]","",.) %>% unique %>% sort
acros
target = "AAP"
llply(book,function(i){
laply(i,function(j){
grepl(target,j)
}) %>% which
}) -> res
names(res) = f
res
laply(f,length)
laply(res,length)
target = "A.A.P."
llply(book,function(i){
laply(i,function(j){
grepl(target,j)
}) %>% which
}) -> res
names(res) = f
laply(res,length)
source('~/Dropbox/Research/In Review/RapWork/flowBook/Scripts/CreateAudioExcerpts.r')
getwd()
setwd("~/Dropbox/Research/In Review/RapWork/flowBook")
source('~/Dropbox/Research/In Review/RapWork/flowBook/Scripts/CreateAudioExcerpts.r')
ex
ex %>% View
source('~/Dropbox/Research/In Review/RapWork/flowBook/Scripts/CreateAudioExcerpts.r')
source("Scripts/loadLibraries.r")
source("Scripts/PlottingScripts/PlotVerse.r")
load("DerivedData/FlowBookCorpus.rdata")
meta = read.delim("SourceData/verseMetadata.txt",header=T)
PlotVerse("stillGotIt",plot.accent = F,plot.rhymeClasses = F,plot.phrase=F)
old.dir = getwd()
source("/Users/mohriner/Dropbox/Teaching/MT II/Code/loadLibraries.r")
library(readxl)
# Variables:
#assignment = "HW9"
comment.path = "/Users/mohriner/Dropbox/Teaching/MT II/Graded components/Rubrics (completed)/HW3a Rubric (complete).xlsx"
FirstGradedColumn = 3 # If the value in this column is NA, there's no need to
submissions.file.path = NA
feedback.folder = "/Users/mohriner/Desktop/feedback"
# Load the comments
x = read_xlsx(comment.path,sheet=1)
total.points = 4 # The sum of the "Points" column in the "criteria" sheet.
x = x[which(!is.na(x[,FirstGradedColumn])),]
w = read_xlsx(comment.path,sheet=2)
PointsOnCanvas = 4
# Load the file names of the submissions:
submitted.file.names = list.files(submissions.file.path)
if(!is.na(submissions.file.path)){
submitted.file.names = list.files(submissions.file.path)
}else{
submitted.file.names = NA
}
submitted.file.names
skip = c()
s = 1:dim(x)[1]
s = s[!s %in% skip]
s
i = 1
crit = which(!grepl("COMMENT",colnames(x)))
crit = crit[-c(1,2,length(crit),length(crit)-1)]
comments = c(paste("Total: ",x$POINTS[i]," of ",PointsOnCanvas," = ",round(x$POINTS[i]/PointsOnCanvas,digits=3)),
"Comments:")
for(j in crit){
s1 = as.numeric(x[i,j])#*w$Weight[which(crit==j)],digits=2) # score
cr = w$Criterion[which(crit==j)] # criterion
comment = x[i,j+1]
if(is.na(comment)){comment=""}
comments = c(comments,paste(cr,": ",s1*100,"% correct. ",comment,sep=""))
}
comments
f = submitted.file.names[grepl(x$STUDENT[i],submitted.file.names)]
f
student.names
x[i,]
x$STUDENT[i]
if(length(f)==0){ # if there was no online submission
f = paste(x$STUDENT[i],".txt",sep="")
}
setwd(feedback.folder)
write(comments,f,ncolumns=1)
setwd("../..")
source('~/Dropbox/Teaching/MT II/Code/ExtractComments.R')
source("/Users/mohriner/Dropbox/Research/RapWork/flowBook/Scripts/loadLibraries.r")
library(textreadr)
setwd("/Users/mohriner/Desktop/listening journal")
# How many songs have more than 100 words?
f = list.files()
source("/Users/mohriner/Dropbox/Teaching/HH + RM (MUAC 1025)/Code/loadLibraries.r")
library(textreadr)
setwd("/Users/mohriner/Desktop/listening journal")
f = list.files()
n = 125
parNum = laply(f,function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
lengths[which(lengths>n)] %>% length
},.inform=T)
parNum = laply(f,function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
lengths[which(lengths>n)] %>% length
},.inform=T)
parNum = laply(f,function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
lengths[which(lengths>n)] %>% length
},.inform=T)
parNum = laply(f,function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
lengths[which(lengths>n)] %>% length
},.inform=T)
skip=c(8)
parNum = laply(f[-skip],function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
lengths[which(lengths>n)] %>% length
},.inform=T)
skip=c(8,18)
parNum = laply(f[-skip],function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
lengths[which(lengths>n)] %>% length
},.inform=T)
f[-skip] %>% strsplit(.,"_") %>% laply(.,function(i) i[1]) -> studentNames
names(parNum) = studentNames
(parNum/20)*6
f = list.files()
n = 125
skip=c(8,18)
parNum = laply(f[-skip],function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
lengths[which(lengths>n)] %>% length
},.inform=T)
f[-skip] %>% strsplit(.,"_") %>% laply(.,function(i) i[1]) -> studentNames
names(parNum) = studentNames
(parNum/20)*6
setwd("/Users/mohriner/Desktop/listening journal")
f = list.files()
n = 125
skip=c(8,18)
parNum = laply(f[-skip],function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
lengths[which(lengths>n)] %>% length
},.inform=T)
f = list.files()
n = 125
skip=c(8,18)
parNum = laply(f[-skip],function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
lengths[which(lengths>n)] %>% length
},.inform=T)
f = list.files()
n = 125
skip=c(8,18)
parNum = laply(f[-skip],function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
lengths[which(lengths>n)] %>% length
},.inform=T)
f = list.files()
n = 125
skip=c(8,18)
parNum = laply(f[-skip],function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
lengths[which(lengths>n)] %>% length
},.inform=T)
f[-skip] %>% strsplit(.,"_") %>% laply(.,function(i) i[1]) -> studentNames
names(parNum) = studentNames
(parNum/20)*6
collapsedLogs = llply(f[-skip],function(i){
doc = read_docx(i)
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
while(sum(lengths<25)>0){
doc[which(lengths<25)[1]+1] = paste(doc[which(lengths<25)[1]],
doc[which(lengths<25)[1]+1],
sep="; ")
doc = doc[-(which(lengths<25)[1])]
laply(doc,function(j){
j %>% strsplit(.,"[[:blank:]]") %>% unlist %>% length
})  -> lengths
}
doc
},.inform=T,.progress = "text")
names(collapsedLogs) = studentNames
target = "kweli"
responses = llply(collapsedLogs,function(i){
i[grepl(target,tolower(i))]
}) %>% llply(.,function(i) if(length(i)>1){return(i[2])}else{return(i)}) %>%
unlist -> responses
responses = paste(studentNames,responses,sep=": ")
write(x =responses,file="~/Desktop/kweli.txt",ncolumns = 1)
parNum
(parNum/20)*6
source('~/Dropbox/Teaching/MT II/Code/ExtractComments.R')
old.dir = getwd()
source("/Users/mohriner/Dropbox/Teaching/MT II/Code/loadLibraries.r")
library(readxl)
# Variables:
#assignment = "HW9"
comment.path = "/Users/mohriner/Dropbox/Teaching/MT II/Graded components/Rubrics (completed)/HW3b Rubric (2018).xlsx"
FirstGradedColumn = 3 # If the value in this column is NA, there's no need to
submissions.file.path = "/Users/mohriner/Desktop/submissions"
feedback.folder = "/Users/mohriner/Desktop/feedback"
# Load the comments
x = read_xlsx(comment.path,sheet=1)
total.points = 4 # The sum of the "Points" column in the "criteria" sheet.
x = x[which(!is.na(x[,FirstGradedColumn])),]
w = read_xlsx(comment.path,sheet=2)
PointsOnCanvas = 4
# Load the file names of the submissions:
if(!is.na(submissions.file.path)){
submitted.file.names = list.files(submissions.file.path)
}else{
submitted.file.names = NA
}
skip = c()
s = 1:dim(x)[1]
s = s[!s %in% skip]
s
for(i in s){
# Build feedback file.
crit = which(!grepl("COMMENT",colnames(x)))
crit = crit[-c(1,2,length(crit),length(crit)-1)]
comments = c(paste("Total: ",x$POINTS[i]," of ",PointsOnCanvas," = ",round(x$POINTS[i]/PointsOnCanvas,digits=3)),
"Comments:")
for(j in crit){
s1 = as.numeric(x[i,j])#*w$Weight[which(crit==j)],digits=2) # score
cr = w$Criterion[which(crit==j)] # criterion
comment = x[i,j+1]
if(is.na(comment)){comment=""}
comments = c(comments,paste(cr,": ",s1*100,"% correct. ",comment,sep=""))
}
f = submitted.file.names[grepl(x$STUDENT[i],submitted.file.names)]
if(length(f)==0){ # if there was no online submission
f = paste(x$STUDENT[i],".txt",sep="")
}
setwd(feedback.folder)
write(comments,f,ncolumns=1)
setwd("../..")
}
i
x$STUDENT[5]
crit = which(!grepl("COMMENT",colnames(x)))
crit = crit[-c(1,2,length(crit),length(crit)-1)]
comments = c(paste("Total: ",x$POINTS[i]," of ",PointsOnCanvas," = ",round(x$POINTS[i]/PointsOnCanvas,digits=3)),
"Comments:")
for(j in crit){
s1 = as.numeric(x[i,j])#*w$Weight[which(crit==j)],digits=2) # score
cr = w$Criterion[which(crit==j)] # criterion
comment = x[i,j+1]
if(is.na(comment)){comment=""}
comments = c(comments,paste(cr,": ",s1*100,"% correct. ",comment,sep=""))
}
f = submitted.file.names[grepl(x$STUDENT[i],submitted.file.names)]
f
source('~/Dropbox/Teaching/MT II/Code/ExtractComments.R')
.56^4
.56^(1/4)
source("Scripts/loadLibraries.r")
source("Scripts/AnalysisScripts/CentralPillarFunctions.r")
source("Scripts/AnalysisScripts/GroovinessFeatureFunctions.R")
meta = read.delim("SourceData/verseMetadata.txt")
load(file = "DerivedData/FlowBookCorpus.rdata")
source("Scripts/AnalysisScripts/RhymeEntropyFunction.r")
load(file = "DerivedData/CMU_contours.rdata")
segments = fread("DerivedData/corpus_groove_segments.txt",header=T)
corpora = tbl_df(corpora)
getwd()
setwd("~/Dropbox/Research/In Review/RapWork/flowBook")
source("Scripts/loadLibraries.r")
source("Scripts/AnalysisScripts/CentralPillarFunctions.r")
source("Scripts/AnalysisScripts/GroovinessFeatureFunctions.R")
meta = read.delim("SourceData/verseMetadata.txt")
load(file = "DerivedData/FlowBookCorpus.rdata")
source("Scripts/AnalysisScripts/RhymeEntropyFunction.r")
load(file = "DerivedData/CMU_contours.rdata")
segments = fread("DerivedData/corpus_groove_segments.txt",header=T)
corpora = tbl_df(corpora)
artist = "kendrickLamar"
titles = corpora %>%
filter(!(corpus %in% c("didactic"))) %>%
arrange(desc(corpus),as.character(verse)) %>%
.$verse %>% unique %>% as.character
"DerivedData/CorpusGlobalFeatures.txt" %>% read.delim %>% tbl_df
"DerivedData/CorpusGlobalFeatures.txt" %>% read.delim %>% tbl_df -> features
features %>% View
features2 = features %>%
select(saturation,sat.delta,phraseLength,phraseLengthVariance,instancesPerClass,
syllablesPerInstance,rhymeMixture,dupleness,sylsPerSecond,sylsPerWord,
rhymeEntropy,rhymeEntropy4,grooviness,adherence,tempo) %>%
as.matrix
features2
dim(features2)
names(feature2)
names(features2)
features2
names(features)
features$corpus
Table5.2 = apply(features2,2,function(i){
a = i[1:30]
b = i[80:154]
t = t.test(a,b)
c(mean(a),sd(a),mean(b),sd(b),mean(a)-mean(b),t$statistic,t$p.value) %>% unname
}) %>% round(digits=2) %>% t
Table5.2 = apply(features2,2,function(i){
a = i[1:30]
b = i[80:154]
t = t.test(a,b)
c(mean(a),sd(a),mean(b),sd(b),mean(a)-mean(b),t$statistic,t$p.value) %>% unname
}) %>% round(digits=2) %>% t
colnames(Table5.2) = c("BT.mean","BT.sd","RM.mean","RM.sd","MeanDiff","t","p")
Table5.2[,7]
p.adjust(Table5.2[,7],method = "bonferroni")
p.adjust(Table5.2[,7],method = "bonferroni") %>% sort()
features$corpus[c(1:30,80:154)]
features$corpus[c(1:60,80:154)]
features$corpus[c(1:50,80:154)]
features$corpus[c(1:49,80:154)]
Table5.2 = apply(features2,2,function(i){
a = i[1:49]
b = i[80:154]
t = t.test(a,b)
c(mean(a),sd(a),mean(b),sd(b),mean(a)-mean(b),t$statistic,t$p.value) %>% unname
}) %>% round(digits=2) %>% t
colnames(Table5.2) = c("BT.mean","BT.sd","RM.mean","RM.sd","MeanDiff","t","p")
p.adjust(Table5.2[,7],method = "bonferroni") %>% sort()
Table5.2 = apply(features2,2,function(i){
a = i[1:30]
b = i[80:154]
t = t.test(a,b)
c(mean(a),sd(a),mean(b),sd(b),mean(a)-mean(b),t$statistic,t$p.value) %>% unname
}) %>% round(digits=2) %>% t
colnames(Table5.2) = c("BT.mean","BT.sd","RM.mean","RM.sd","MeanDiff","t","p")
p.adjust(Table5.2[,7],method = "bonferroni") %>% sort()
Table5.2 = apply(features2,2,function(i){
a = i[1:30]
b = i[80:154]
t = t.test(a,b)
c(mean(a),sd(a),mean(b),sd(b),mean(a)-mean(b),t$statistic,t$p.value) %>% unname
}) %>% round(digits=4) %>% t
colnames(Table5.2) = c("BT.mean","BT.sd","RM.mean","RM.sd","MeanDiff","t","p")
p.adjust(Table5.2[,7],method = "bonferroni") %>% sort()
Table5.2[,7] = p.adjust(Table5.2[,7],method = "bonferroni") %>% sort()
Table5.2
Table5.2 = round(Table5.2,digits=2)
Table5.2
write.table(Table5.2,file="Examples/Chapter 5/Table 5.2.txt",quote=F,row.names=T)
dim(features2)
dim(Table5/2)
dim(Table5.2)
file.exists("~/.ssh/id_rsa.pub")
